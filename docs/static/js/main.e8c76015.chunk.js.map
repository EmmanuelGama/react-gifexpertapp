{"version":3,"sources":["components/common/GiphyCard.js","utils/getGifs.js","components/common/Spinner.js","components/common/GifGrid.js","hooks/useFetchGifs.js","components/interface/AddCategory.js","components/interface/GifList.js","App.js","index.js"],"names":["GiphyCard","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","img","id","images","downsized_medium","Spinner","GifGrid","useState","loading","state","setstate","useEffect","then","useFetchGifs","imgs","AddCategory","setCategory","inputValue","SetInputValue","onSubmit","e","preventDefault","trim","categories","type","value","onChange","target","GifList","categoryList","setcategoryList","i","App","props","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"oNAkBeA,EAhBG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC1B,OACE,mCACE,sBAAKC,UAAU,+GAAf,UACE,qBAAIA,UAAU,uDAAd,cAAwEF,EAAxE,OACA,qBAAKE,UAAU,sBAAsBC,IAAMF,EAAMG,IAAMH,U,uBCPzDI,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACRN,EADQ,iDACyCO,UAAUF,GADnD,8DAEIG,MAAMR,GAFV,cAERS,EAFQ,gBAGSA,EAAIC,OAHb,uBAGNC,EAHM,EAGNA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAKc,EAAIE,OAAOC,iBAAiBjB,QATvB,kBAaPY,GAbO,4CAAH,sDAgBER,ICLAc,G,MATC,WACd,OACE,sBAAKjB,UAAU,mDAAf,UACE,oBAAIA,UAAU,uCAAd,wBACA,qBAAKA,UAAU,iFC2BNkB,EA5BC,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SACjB,ECH0B,SAACA,GAC3B,MAA0Be,mBAAS,CACjCT,KAAM,GACNU,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAU,WACRpB,EAAQC,GACLoB,MAAK,SAAAb,GAAI,OAAIW,EAAS,CACrBZ,KAAMC,EACNS,SAAS,SAEZ,CAAChB,IAEGiB,EDXwBI,CAAarB,GAApCgB,EAAR,EAAQA,QAAcM,EAAtB,EAAiBhB,KAEXC,EACJ,qCACE,qBAAKX,UAAU,6IAAf,SAEI0B,EAAKd,KAAI,gBAAGE,EAAH,EAAGA,GAAIhB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,IAAd,OACP,cAAC,EAAD,CAAsBD,MAAQA,EAAQC,IAAMA,GAA3Be,QAIvB,oBAAId,UAAU,mBAIlB,OACE,qCACE,qBAAIA,UAAU,wCAAd,cAAyDI,EAAzD,OACEgB,EAAU,cAAC,EAAD,IAAcT,M,OEgBjBgB,EArCK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACrB,EAAoCT,mBAAS,IAA7C,mBAAOU,EAAP,KAAmBC,EAAnB,KAcA,OACE,uBAAMC,SAba,SAAAC,GACnBA,EAAEC,iBACwB,KAAtBJ,EAAWK,SACbN,GAAY,SAAAO,GAAU,OAAMN,GAAN,mBAAqBM,OAC3CL,EAAc,MAShB,UACE,uBACEM,KAAK,OACLC,MAAOR,EACPS,SAToB,SAAAN,GACxBF,EAAcE,EAAEO,OAAOF,QASnBrC,UAAU,mHAEZ,wBACEoC,KAAK,SACLpC,UAAU,iGAFZ,yBCJSwC,EAlBC,WACd,MAAwCrB,mBAAS,IAAjD,mBAAOsB,EAAP,KAAqBC,EAArB,KAEA,OACE,qCACE,cAAC,EAAD,CAAad,YAAac,IAE1B,oBAAI1C,UAAU,4CAGZyC,EAAa7B,KAAI,SAACR,EAAUuC,GAAX,OACf,cAAC,EAAD,CAA6BvC,SAAWA,GAAxC,eAAuBuC,WCFlBC,EAXH,SAAAC,GACV,OACE,qCACE,oBAAI7C,UAAU,mCAAd,kCAEA,cAAC,EAAD,QCDN8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.e8c76015.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst GiphyCard = ({ title, url }) => {\r\n  return (\r\n    <>\r\n      <div className=\"px-2 py-1 bg-white shadow rounded flex flex-col justify-center items-center animate__animated animate__pulse\">\r\n        <h1 className=\"text-gray-800 text-semibold text-lg text-center mb-2\"> { title } </h1>\r\n        <img className=\"rounded h-48 w-auto\" src={ url } alt={ url } />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nGiphyCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GiphyCard","const getGifs = async(category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=8&api_key=B5Uezh9P33ux9oCAKuJ1mxWFJVieRrSL`\r\n  const res = await fetch(url)\r\n  const { data } = await res.json()\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs\r\n}\r\n\r\nexport default getGifs","import './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"w-full flex flex-col justify-center items-center\">\r\n      <h3 className=\"font-bold text-xl text-gray-800 mb-2\"> Cargando </h3>\r\n      <div className=\"h-32 w-32 bg rounded-full border-8 border-gray-300 animate-spin spinner\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner","import PropTypes from 'prop-types'\r\nimport GiphyCard from './GiphyCard'\r\nimport { useFetchGifs } from '../../hooks/useFetchGifs'\r\nimport Spinner from './Spinner'\r\n\r\nconst GifGrid = ({ category }) => { \r\n  const { loading, data:imgs } = useFetchGifs(category)\r\n  \r\n  const gifs = (\r\n    <>\r\n      <div className=\"grid place-items-center grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-x-4 gap-y-2 place-content-stretch place-items-stretch\">\r\n        {\r\n          imgs.map(({ id, title, url }) => (\r\n            <GiphyCard key={ id } title={ title } url={ url } />\r\n          ))\r\n        }\r\n      </div>\r\n      <hr className=\"w-full my-4\" />\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"text-gray-800 text-bold text-3xl mb-4\"> { category } </h2>\r\n      { loading ? <Spinner /> : gifs }\r\n    </>\r\n  )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n  category: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGrid","import { useState, useEffect } from 'react'\r\nimport getGifs from '../utils/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(gifs => setstate({\r\n        data: gifs,\r\n        loading: false\r\n      }))\r\n  }, [category])\r\n\r\n  return state\r\n}\r\n","import { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategory }) => {\r\n  const [inputValue, SetInputValue] = useState('')\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (inputValue.trim() !== '') {\r\n      setCategory(categories => [ inputValue, ...categories ])\r\n      SetInputValue('')\r\n    }\r\n  }\r\n\r\n  const handleInputChange = e => {\r\n    SetInputValue(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        className=\"border-2 border-blue-600 py-1 px-2 rounded shadow text-gray-700 semibold focus:outline-none w-full mb-2 shadow\" \r\n      />\r\n      <button \r\n        type=\"submit\"\r\n        className=\"semibold text-lg text-white bg-blue-600 rounded py-1 px-2 hover:bg-blue-700 w-full mb-2 shadow\"\r\n      > \r\n        Agregar \r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategory: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory","import { useState } from 'react'\r\nimport GifGrid from '../common/GifGrid'\r\nimport AddCategory from './AddCategory'\r\n\r\nconst GifList = () => {\r\n  const [categoryList, setcategoryList] = useState([])\r\n\r\n  return (\r\n    <>\r\n      <AddCategory setCategory={setcategoryList} />\r\n\r\n      <hr className=\"border-t-4 border-gray-800 my-3 rounded\" />\r\n\r\n      {\r\n        categoryList.map((category, i) => (\r\n          <GifGrid key={ `grid-${i}` } category={ category } />\r\n        ))\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifList","import GifList from './components/interface/GifList'\r\n\r\nconst App = props => {\r\n  return (\r\n    <>\r\n      <h1 className=\"bold text-5xl text-gray-800 mb-4\"> Aplicacion de Gifs </h1>\r\n\r\n      <GifList />\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './styles/index.css'\r\nimport 'animate.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector('#root')\r\n)"],"sourceRoot":""}